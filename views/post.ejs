<h1 class="d-flex justify-content-center"><%= data.title %></h1>

<% if (Array.isArray(data.image) && data.image.length > 1) { %>
  <!-- Carousel for multiple images -->
  <div class="d-flex justify-content-center">
    <div id="postImagesCarousel" class="carousel slide mb-4" data-bs-ride="carousel" style="max-width:1100px; width:100%;">
      <div class="carousel-inner">
        <% data.image.forEach(function(img, idx) { %>
          <div class="carousel-item <%= idx === 0 ? 'active' : '' %>">
            <img src="<%= img %>" 
                 class="d-block w-100"
                 alt="Blog image"
                 style="max-height:350px; object-fit:cover; border-radius:10px;">
          </div>
        <% }) %>
      </div>

      <button class="carousel-control-prev" type="button" data-bs-target="#postImagesCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>

      <button class="carousel-control-next" type="button" data-bs-target="#postImagesCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
    </div>
  </div>

<% } else if (data.image && (Array.isArray(data.image) ? data.image.length > 0 : true)) { %>
  <!-- Single image -->
  <div class="d-flex justify-content-center">
    <img src="<%= Array.isArray(data.image) ? data.image[0] : data.image %>" 
         alt="Blog image" 
         class="img-fluid rounded shadow" 
         style="max-width:1100px; height:350px; object-fit:cover; margin:15px 0;">
  </div>

<% } else { %>
  <!-- Default fallback image -->
  <div class="d-flex justify-content-center">
    <img src="/image.png" alt="Default Blog image" 
         class="img-fluid rounded shadow" 
         style="max-width:1100px; height:350px; object-fit:cover; margin:15px 0;">
  </div>
<% } %>

  <div class="d-flex gap-3">
    <button id="playPauseBtn"
       class="btn btn-success rounded-circle shadow-lg d-flex align-items-center justify-content-center add-btn"
       title="Play">
      <span class="fs-3 fw-bold">▶</span>
  </button>

    <button id="stopBlog" 
       class="btn btn-primary rounded-circle shadow-lg d-flex align-items-center justify-content-center history-btn"
       title="Stop Blog">⏹
      <i class="fas fa-history fs-4"></i>
    </button>
  </div>

<div id="blogContent" style="display:none;">
  <%- data.body %>
</div>

<p class="article d-flex justify-content-center"><%- data.body %></p>

<a href="/download/<%= data._id %>" class="btn-outline-secondary mb-3" title="download">
  <img src="/icons8-downloading-updates-64.png" alt="Download Icon" style="width:25px; height:25px; margin-right:8px;">
</a>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const playPauseBtn = document.getElementById("playPauseBtn");
    const stopBtn = document.getElementById("stopBlog");
    const blogContainer = document.getElementById("blogContent");

    let speech;
    let isPlaying = false;

    // ✅ Extract only readable text (skip images, etc.)
    function getCleanBlogText() {
      if (!blogContainer) return "";
      const clone = blogContainer.cloneNode(true);

      // Remove unwanted elements
      clone.querySelectorAll("img, script, style, iframe, video, audio").forEach(el => el.remove());

      // Get only visible text
      return clone.innerText.trim();
    }

    function updateButton() {
      if (playPauseBtn) {
        playPauseBtn.textContent = isPlaying ? "⏸" : "▶";
      }
    }

    if (playPauseBtn) {
      playPauseBtn.addEventListener("click", () => {
        if (!isPlaying) {
          if (speechSynthesis.paused) {
            speechSynthesis.resume();
          } else {
            const blogText = getCleanBlogText();
            if (!blogText) {
              alert("No readable text found in the blog!");
              return;
            }
            speech = new SpeechSynthesisUtterance(blogText);
            speech.lang = "en-US";
            speech.rate = 1;
            speech.pitch = 1;
            speechSynthesis.speak(speech);

            speech.onend = () => {
              isPlaying = false;
              updateButton();
            };
          }
          isPlaying = true;
        } else {
          speechSynthesis.pause();
          isPlaying = false;
        }
        updateButton();
      });
    }

    if (stopBtn) {
      stopBtn.addEventListener("click", () => {
        speechSynthesis.cancel();
        isPlaying = false;
        speech = null;
        updateButton();
      });
    }

    // ✅ Stop speech when leaving the page
    window.addEventListener("beforeunload", () => {
      speechSynthesis.cancel();
    });

    updateButton();
  });
</script>

